[project]
name = "greyhorse"
version = "0.4.13"
description = "Greyhorse library"
license = "MIT"
repository = "https://gitlab.com/max-plutonium/greyhorse"
authors = ["Max Plutonium <plutonium.max@gmail.com>"]
maintainers = ["Max Plutonium <plutonium.max@gmail.com>"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

packages = [
    { include = "greyhorse" },
]

[tool.poetry.dependencies]
python = "^3.12"
asyncclick = "^8.1"
click = "^8.1"
pydantic = {version = "^2.0", extras = ["dotenv", "email"]}
pytz = "^2023.0"
timeparse-plus = "^1.2"
tomlkit = "^0.11"
orjson = "^3.8"
networkx = "^3.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
pytest-asyncio = "^0.23"
pytest-cov = "^4.1"
pytest-mock = "^3.12"
pytest-faker = "^2.0"
mypy = "^1.11"
pre-commit = "^3.5"
ruff = "^0.6.5"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 96
# Group violations by containing file.
output-format = "grouped"
# Enable preview features.
preview = true
# Enumerate all fixed violations.
show-fixes = true

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true
# Enable preview style formatting.
preview = true
# Prefer single quotes over double quotes.
quote-style = "single"
skip-magic-trailing-comma = true

dependencies = [
    "networkx>=3.3",
    "orjson>=3.10.7",
    "pydantic[email]>=2.9.2",
    "pytz>=2024.2",
    "timeparse-plus>=1.2.0",
    "tomlkit>=0.13.2",
]
plugins = "pydantic.mypy"
pretty = true
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
follow_imports = "normal"
ignore_errors = false
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = false
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true
disable_error_code = [
    "no-redef", "valid-type", "attr-defined", "type-arg", "var-annotated",
    "no-untyped-def", "no-untyped-call", "name-defined", "used-before-def"
]
exclude = "tests/broken/*"

[tool.pytest.ini_options]
addopts = [
  "--tb=short",
  "--cov=greyhorse",
  "--cov=tests",
  "--cov-report=term",
  "--cov-report=html",
  "--ignore-glob=tests/broken",
]
testpaths = [
  "tests",
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.11.2",
    "pre-commit>=3.8.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-faker>=2.0.0",
    "pytest-mock>=3.14.0",
    "pytest>=8.3.3",
    "ruff>=0.6.7",
    "uv-dynamic-versioning>=0.1.0",
]
